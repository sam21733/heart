# -*- coding: utf-8 -*-
"""Heart Attack Analysis and Prediction

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/heart-attack-analysis-and-prediction-84c5c654-62d6-4641-8dad-3dfc0237681c.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20240829/auto/storage/goog4_request%26X-Goog-Date%3D20240829T055012Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3Da8fdadac0f7b99a48a7e02bd35988cff255612c987644a0767bf051896e65a52785c3c761af0afbe08a5e798d2e2df871848a548ebebca01f33c4fcd96bf73ef78785a58e8aa5bb5075a1d8b1cbb126b36b44ffe1548127ca648f4d7eb5e9c797aa1a467daaafdf2f0cf9565b86001f6e90b62416863130f1656e261cd3ac8e5f0019007b542f802d47438ace007483c6c18fe4359d3351bdd1eec2577f079393f122b2dc9a8a38220e3aa402e339501057d4ec9b981f8a351a860c77a7ad9e642c9c3576a8fdfc371a27c6a315e0065fb3e0b3a498863a87558f807e9dfe71072bea2f6fc0e0e3182145e302d92cdec0e03bd555be967e73db4abf0587e49ec

Heart disease is the leading cause of death globally, claiming millions of lives each year. Understanding the factors that contribute to heart attacks can help in early diagnosis and prevention. In this notebook, we will explore a dataset related to heart attack analysis and prediction. If you find this notebook useful, please consider upvoting it.
"""

# Suppress warnings
import warnings
warnings.filterwarnings('ignore')

# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# Load the datasets
heart_df = pd.read_csv('/content/heart.csv')
o2_saturation_df = pd.read_csv('/content/o2Saturation.csv')

"""### Initial Data Exploration"""

# Display the first few rows of the heart dataset
heart_df.head()

# Display the first few rows of the O2 saturation dataset
o2_saturation_df.head()

"""### Data Cleaning and Preparation"""

# Check for missing values in heart dataset
heart_df.isnull().sum()

# Check for missing values in O2 saturation dataset
o2_saturation_df.isnull().sum()

"""### Exploratory Data Analysis (EDA)"""

# Plot the distribution of age
plt.figure(figsize=(10, 6))
sns.histplot(heart_df['age'], kde=True, bins=30)
plt.title('Age Distribution')
plt.xlabel('Age')
plt.ylabel('Frequency')
plt.show()

# Plot the correlation heatmap
numeric_df = heart_df.select_dtypes(include=[np.number])
plt.figure(figsize=(12, 8))
sns.heatmap(numeric_df.corr(), annot=True, cmap='coolwarm')
plt.title('Correlation Heatmap')
plt.show()

"""### Predictive Modeling"""

# Define features and target variable
X = heart_df.drop('output', axis=1)
y = heart_df['output']

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a Logistic Regression model
model = LogisticRegression()
model.fit(X_train, y_train)

# Make predictions on the test set
y_pred = model.predict(X_test)

# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
conf_matrix = confusion_matrix(y_test, y_pred)
class_report = classification_report(y_test, y_pred)
accuracy, conf_matrix, class_report

"""### Conclusion and Future Work

In this notebook, we explored the heart attack analysis and prediction dataset. We performed initial data exploration, cleaning, and visualization. We also built a predictive model using Logistic Regression and evaluated its performance.

For future analysis, it would be interesting to:
- Explore other machine learning models and compare their performance
- Perform feature engineering to create new features that might improve the model
- Investigate the impact of O2 saturation levels on heart attack prediction

What do you think would be useful to explore next? Let me know in the comments.

## Credits
This notebook was created with the help of [Devra AI data science assistant](https://devra.ai/ref/kaggle)
"""